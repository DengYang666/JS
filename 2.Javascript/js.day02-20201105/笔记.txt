运算:
1.算术运算  + - x ÷ %  ==> + - * / %(取余)  =>****** 二进制(左移 右移 异或) ******
    += -= *= /= %= 赋值运算(自身与后面的 数据运算)

    一元运算 递增递减
    a++; 
    ++a;

    a--;
    --a;
2.比较运算 (关系运算符)
    > <  >= <= == !=  ===  !==
3.逻辑运算(布尔运算) 与 &&  或 ||  非 !
    参与运算值一般都是布尔值 结果  也是布尔值( 也可能不是布尔值,决定整个条件的具体值 )

表达式:
    值和运算在一起进行运算的语句称为 表达式

    10>20
语句:
    var a=20;
缩进:
var a=20;
var b=20;
if(){
    console.log(123);
    console.log(123);
    console.log(123);
}

总结:
算术运算:
关系运算(比较运算):
逻辑运算:

js是弱类型语言,参与运算的数 的类型不确定,就需要转化.
自动转化(隐式转化):
  算术运算里面,除了+法外 其他算术运算都会把其他类型的数据转化(Number())为数字 然后进行运算.
  关系运算里面:
    1.字符串 和 字符串比较的 编码表对应的码值.
    2.数字和其他类型进行比较的时候,都会转化数字(Number),然后在比较
  逻辑运算:
    在进行逻辑(与 或)运算之前把 表达式 转化为布尔(Boolean)然后进行运算. 返回结果布尔( 可能原值 )

作用: 分析程序错误.(逻辑错误)
console.log(age,abx,abc);
if(age>50 && age==true && abx==0 && abc){
}
js 弱类型.
自动转化(隐式转化)
   + - * / % NaN null undefined true false
   >true false>10;
   



